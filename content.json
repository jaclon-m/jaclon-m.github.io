{"pages":[],"posts":[{"title":"OpenJDK编译","text":"##准备 获取源码：进入官网 https://jdk7.java.net/source.html选择JavaSE7 ，点击下面的zip file会进入源码下载链接 RI Source Code The source code of the RI binaries is available under the GPLv2 in a single zip file (md5) 100 MB. 系统需求：这里我使用的是CentOS7.仔细阅读源码包中README-builds.html文档，就可以构建编译环境了(忘记读了。。。） 配置环境变量编译依赖：OpenJDK包括虚拟机Hotsport | JDK API | JAXWS | JAXP等。需要各种编译依赖，包括C++，C的编译环境，编译Java的JDK(称为Bootstrap JDK)，还有用于执行java代码的Ant脚本等等。这些依赖在Linux中都可以通过命令一次安装完成。 sudo yum install build-essential gawk m4 libasound2-dev libcups-dev libxrender-dev xorg-dev xutils-dev x11proto-print-dev binutils libmotif3 libmotif-dev ant环境变量：可以编辑/etc/profile，但这里我不想在里面加内容，就在openjdk目录下写了个environments_set.sh，使用./environments_set.sh运行 export LANG=C #BootStrap-JDK的安装路径，替换为自己bootstrap-JDK的路径 export ALT_BOOTDIR=/opt/jdk1.7.0_79/ #允许自动下载依赖 export ALLOW_DOWNLOADS=true #并行编译的线程数 export HOTSPOT_BULLD_JOBS=4 export ALT_PARALLEL_COMPILE_JOBS=4 export SKIP_COMPARE_IMAGES=true #使用预编译头文件，不加这个编码会慢一些 export USE_PRECOMPILED_HEADER=true #要编译的内容，读者可以根据需要自行选择 export BUILD_LANGTOOLS=true #export BUILD_JAXWS=false #export BUILD_JAXP=false #export BUILD_CORBA=false export BUILD_HOTSPOT=true export BUILD_JDK=true #false避开javaws和浏览器java插件之类部分的build BUILD_DEPLOY=false #false这样不会产生安装包，因为安装包中有些奇怪的依赖 BUILD_INSTALL=false #编译结果存放的路径，建议存放在openjdk源码中build文件夹 export ALT_OUTPUTDIR=/home/openjdk/build #这两个环境变量需要去掉，不然会出问题 unset JAVA_HOME unset CLASSPATH make 2&gt;&amp;1 | tee $ALT_OUTPUTDIR/build.log ##编译过程 编译会出现很多错误，接觉方式主要参考下面博客http://chenjingbo.iteye.com/blog/1117021http://www.mamicode.com/info-detail-1986398.html 只有这个错误解决时间比较长 bin/ld: cannot find -lstdc++ collect2: error: ld returned 1 exit status ln: failed to access ‘libjvm.so.1‘: Too many levels of symbolic links /usr/bin/chcon: failed to get security context of ‘libjvm.so‘: Too many levels of symbolic links ERROR: Cannot chcon libjvm.so /usr/bin/objcopy --only-keep-debug libjvm.so libjvm.debuginfo /usr/bin/objcopy: Warning: could not locate ‘libjvm.so‘. reason: Too many levels of symbolic links make[6]: *** [libjvm.so] Error 1 make[6]: Leaving directory `/root/openjdk_compile/build/hotspot/outputdir/linux_amd64_compiler2/product‘ make[5]: *** [the_vm] Error 2 make[5]: Leaving directory `/root/openjdk_compile/build/hotspot/outputdir/linux_amd64_compiler2/product‘ make[4]: *** [product] Error 2 make[4]: Leaving directory `/root/openjdk_compile/build/hotspot/outputdir‘ make[3]: *** [generic_build2] Error 2 make[3]: Leaving directory `/root/openjdk_compile/openjdk/hotspot/make‘ make[2]: *** [product] Error 2 make[2]: Leaving directory `/root/openjdk_compile/openjdk/hotspot/make‘ make[1]: *** [hotspot-build] Error 2 make[1]: Leaving directory `/root/openjdk_compile/openjdk‘ make: *** [build_product_image] Error 2在安装了libstdc++-static.x86_64依然出现ERROR: Cannot chcon libjvm.so错误删除了build文件夹重新运行解决。 其中还出现了/目录空间不足的问题，把openjdk由/opt放到/home下。删除了/下几个文件解决。加强了对系统挂载的理解。 运行位置/home/openjdk/build/hotspot/outputdir/linux_amd64_compiler2/product运行参考博文：https://www.cnblogs.com/ACFLOOD/p/5528035.htmlhttps://blog.csdn.net/m0_37726449/article/details/81233853","link":"/2020/07/18/OpenJDK%E7%BC%96%E8%AF%91/"}],"tags":[],"categories":[{"name":"编程语言","slug":"编程语言","link":"/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"},{"name":"JVM","slug":"编程语言/JVM","link":"/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JVM/"}]}